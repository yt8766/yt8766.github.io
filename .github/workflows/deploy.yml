# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
#
name: Deploy VitePress

on:
  # 在针对 `main` 分支的推送上运行。如果你
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:
    branches: [master]

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      - name: Setup pnpm
        uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消此区域注释
        with:
          version: 10
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm # 或 pnpm / yarn

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: pnpm install # 或 pnpm install / yarn install / bun install

      - name: Build with VitePress
        run: pnpm docs:build # 或 pnpm docs:build / yarn docs:build / bun run docs:build

      - name: Send email
        uses: dawidd6/action-send-mail@v5
        with:
          server_address: smtp.qq.com
          server_port: 465
          username: ${{secret.MAIL_USERNAME }}
          password: ${{secret.MAIL_PASSWORD }}
          subject: "VitePress部署状态: ${{ job.status }}"
          body: |
            🚀 项目部署通知
            ==================
            仓库: ${{ github.repository }}
            分支：${{ github.ref_name }}
            触发者：${{ github.actor }}
            提交ID: ${{ github.sha }}
            构建状态: ${{ job.status  }}
            日志: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: a17674328693@gmail.com,1322147900@qq.com # 收件邮箱
          from: ${{secret.MAIL_USERNAME }}
          secure: true

      - name: Move built files to root directory and clean up
        run: |
          rm -rf guide reference
          mv docs/.vitepress/dist/* ./
          rm -rf docs/.vitepress/dist

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
